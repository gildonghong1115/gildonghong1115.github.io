// Generated by CoffeeScript 1.10.0
(function() {
  var App, canvas, ctx, img1, img2, load, loaded, on_load;

  App = (function() {
    function App(app_id) {
      this.app_id = app_id;
    }

    App.prototype.load_fb_sdk = function() {
      var d, fjs, id, js, s;
      d = document;
      s = 'script';
      id = 'facebook-jssdk';
      fjs = document.getElementsByTagName('script')[0];
      if (!document.getElementById(id)) {
        js = document.createElement('script');
        js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        return fjs.parentNode.insertBefore(js, fjs);
      }
    };

    App.prototype.init_fb = function() {
      FB.init({
        appId: this.app_id,
        cookie: true,
        xfbml: true,
        version: 'v2.5'
      });
      return this.check_login_state();
    };

    App.prototype.on_status_change = function(response) {
      console.log("---- on_status_change ----");
      console.log(response);
      if (response.status === 'connected') {
        return this.on_connected();
      } else if (response.status === 'not_authorized') {
        return alert("로그인해주세요.");
      } else {
        return alert("페이스북으로 로그인해주세요.");
      }
    };

    App.prototype.on_connected = function() {
      alert("connected");
      return FB.api('/me', function(response) {
        return console.log("Successful login for: " + response.name);
      });
    };

    App.prototype.check_login_state = function() {
      var me;
      me = this;
      return FB.getLoginStatus(function(response) {
        return me.on_status_change(response);
      });
    };

    return App;

  })();

  window.app = new App("1507474466213153");

  app.load_fb_sdk();

  window.fbAsyncInit = function() {
    return app.init_fb();
  };

  canvas = document.getElementById("canvas");

  ctx = canvas.getContext("2d");

  loaded = 0;

  on_load = function() {
    loaded += 1;
    if (loaded === 2) {
      ctx.drawImage(img1, 0, 0);
      ctx.globalAlpha = 0.5;
      return ctx.drawImage(img2, 0, 0);
    }
  };

  load = function(src, onload) {
    var img;
    img = new Image();
    img.onload = onload;
    img.src = src;
    return img;
  };

  img1 = load('http://upload.wikimedia.org/wikipedia/en/2/24/Lenna.png', on_load);

  img2 = load('http://introcs.cs.princeton.edu/java/31datatype/peppers.jpg', on_load);

}).call(this);
